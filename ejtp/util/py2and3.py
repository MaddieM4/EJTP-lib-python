'''
This file is part of the Python EJTP library.

The Python EJTP library is free software: you can redistribute it 
and/or modify it under the terms of the GNU Lesser Public License as
published by the Free Software Foundation, either version 3 of the 
License, or (at your option) any later version.

the Python EJTP library is distributed in the hope that it will be 
useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser Public License for more details.

You should have received a copy of the GNU Lesser Public License
along with the Python EJTP library.  If not, see 
<http://www.gnu.org/licenses/>.
'''

def is_string(value):
    '''
    Checks, if value is a string. In python 2.x it checks if value is an
    instance of basestring. In python 3.x it checks if it is an instance of
    str or bytes, since all strings in python 3 derivate from str rather than
    basestring and bytes isn't a subclass of str anymore.

    '''

    if isinstance(value, str):
        return True
    if issubclass(bytes, str):
        # In python 2.x bytes is subclass of str, in python 3.x not.
        return isinstance(value, basestring)
    return isinstance(value, bytes)

def get_unicode():
    '''
    Returns an unicode class. In python 2.x thats unicode but in python 3.x
    there is no uncode class anymore, because str itself is unicode.
    '''

    if hasattr('', 'decode'):
        # In python 2.x the string generated by '' has a method decode, in
        # python 3.x not. That's because python 3.x strictly separates str
        # and bytes
        return unicode
    return str
